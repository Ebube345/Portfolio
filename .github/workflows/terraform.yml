name: Terraform CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'projects/gitops-with-flux/iac/terraform/**'  # Adjust this to the path of your particular project (e.g., the directory containing Terraform files)
  pull_request:
    branches:
      - main
    paths:
      - 'projects/gitops-with-flux/iac/terraform/**'  # Same as above

permissions:
  contents: read
  id-token: write  # If using OIDC for cloud provider authentication

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform  # Adjust if your Terraform root is in a different directory

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.4  # Use the latest or your preferred version

      # - name: Configure cloud credentials
      #   # Example for AWS (if your managed cluster is EKS); adjust for GCP, Azure, etc.
      #   # If using OIDC, configure the role assumption here.
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_ROLE_ARN }}  # Store your ARN in GitHub secrets
      #     aws-region: ${{ secrets.AWS_REGION }}  # Store your region in secrets
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Optional if using OIDC
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Optional if using OIDC

      - name: Terraform Init
        run: terraform init # -backend-config="bucket=${{ secrets.TF_BACKEND_BUCKET }}" -backend-config="key=${{ secrets.TF_BACKEND_KEY }}" -backend-config="region=${{ secrets.AWS_REGION }}"  # Adjust backend config as needed
        working-directory: projects/gitops-with-flux/iac/terraform/
        
      - name: Terraform Validate
        run: terraform validate
        working-directory: projects/gitops-with-flux/iac/terraform/

      - name: Terraform Plan
        run: terraform plan -out=plan.tfplan
        working-directory: projects/gitops-with-flux/iac/terraform/
        if: github.event_name == 'pull_request'

      - name: Comment Plan on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const plan = fs.readFileSync('terraform/plan.tfplan', 'utf8');  // Adjust path
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Terraform Plan:\n```\n' + plan + '\n```'
            });
        

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
        working-directory: projects/gitops-with-flux/iac/terraform/
